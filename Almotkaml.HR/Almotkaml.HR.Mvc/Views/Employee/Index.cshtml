@model EmployeeIndexModel

@{
    ViewBag.Title = "الموظفين";
}

<br />
<p>
    @Html.Create(Model.CanCreate)
</p>

@Html.Note()
@using (Html.BeginForm(Html.Action(), Html.Controller(), FormMethod.Post, new { enctype = "multipart/form-data" }))
{
@*<div class="form-group">
    @Html.Label("تحميل الملف")
    <input name="file" type="file"/>
    <input name="import" type="submit" value="upload" class="file btn btn-primary btn-outline"/>
</div>*@
}

<div class="row">
    <div class="col-lg-12">

            <div class="panel panel-default">
                <div class="panel-heading">@ViewBag.Title</div>
                <form method="post" id="Index">
                    <div class="loader">
                        @Html.SavedModel(Model)
                        <div class="col-lg-3 col-md-4 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.CenterId)
                                @Html.DropDownListFor(model => model.CenterId, new SelectList(Model.CenterList, nameof(CenterListItem.CenterId), nameof(CenterListItem.Name)), "--اختر--", new { @class = "field_menu form-control", onchange = "this.form.submit()" })
                                @Html.ValidationMessageFor(model => model.CenterId)
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-4 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.DepartmentId)
                                @Html.DropDownListFor(model => model.DepartmentId, new SelectList(Model.DepartmentList, nameof(DepartmentListItem.DepartmentId), nameof(DepartmentListItem.Name)), "--اختر--", new { @class = "field_menu form-control", onchange = "this.form.submit()" })
                                @Html.ValidationMessageFor(model => model.DepartmentId)
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-4 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.DivisionId)
                                @Html.DropDownListFor(model => model.DivisionId, new SelectList(Model.DivisionList, nameof(DivisionListItem.DivisionId), nameof(DivisionListItem.Name)), "--اختر--", new { @class = "field_menu form-control", onchange = "this.form.submit()" })
                                @Html.ValidationMessageFor(model => model.DivisionId)
                            </div>
                        </div>
                        <div class="col-lg-3 col-md-4 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.UnitId)
                                @Html.DropDownListFor(model => model.UnitId, new SelectList(Model.UnitList, nameof(UnitListItem.UnitId), nameof(UnitListItem.Name)), "--اختر--", new { @class = "field_menu form-control", onchange = "this.form.submit()" })
                                @Html.ValidationMessageFor(model => model.UnitId)
                            </div>


                        </div>
                    </div> 
                </form>

        <!-- /.panel-heading -->
        <div class="panel-body">
            <div class="table-responsive">
                <table data-order='[]' class="table table-striped table-bordered table-hover" id="dataTables-example">
                    <thead>
                        <tr>
                            <th>ر.ت</th>
                            <th>الرقم الوظيفي</th>
                            <th>الاسم</th>
                            <th>الوحدة التنظيمية</th>
                            <th>الإدارة/المكتب</th>
                            <th>الرقم الوطني</th>
                            <th>@Html.Show(Model.CanEdit)</th>
                            <th>@Html.Show(Model.CanDelete)</th>
                            @*@if (Model.CanDelete)
                                {
                                    <th>حذف</th>
                                }*@
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            var count = 0;
                        }
                        @foreach (var item in Model.EmployeeGrid)
                        {
                            count++;
                            <tr class="odd gradeX">
                                <td>@count</td>
                                <td>@Html.DisplayFor(modelItem => item.JobNumber)</td>
                                <td>@Html.DisplayFor(modelItem => item.ArabicFullName)</td>
                                <td>@Html.DisplayFor(modelItem => item.CenterName)</td>
                                <td>@Html.DisplayFor(modelItem => item.DepartmentName)</td>
                                <td>@Html.DisplayFor(modelItem => item.NationalNumber)</td>

                                @*  @Html.ActionLink(Html.Show(Model.CanEdit), "Edit", new {id = item.EmployeeId}, new {@class = "btn btn-info"})*@
                                <td class="center">@Html.ActionLink("عرض", "Edit", new { id = item.EmployeeId }, new { @class = "btn btn-info" })</td>


                                @*@if (Model.CanDelete)
                                    {*@
                                        <td class="center">@Html.ActionLink("حذف", "Delete", new { id = item.EmployeeId }, new { @class = "btn btn-danger" })</td>
                                   
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
        <!-- /.panel-body -->
        </div>
    </div>
</div>
<!-- /.panel -->
