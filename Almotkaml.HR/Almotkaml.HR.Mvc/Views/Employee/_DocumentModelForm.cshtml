@model DocumentModel
@{
    ViewBag.Title = "الوثائق الرسمية";
    Html.EnableClientValidation(false);
}

<script>
    function openModal() {
        document.getElementById('myModal').style.display = "block";
    }

    function closeModal() {
        document.getElementById('myModal').style.display = "none";
    }

    var slideIndex = 1;
    showSlides(slideIndex);

    function plusSlides(n) {
        showSlides(slideIndex += n);
    }

    function currentSlide(n) {
        showSlides(slideIndex = n);
    }

    function showSlides(n) {
        var i;
        var slides = document.getElementsByClassName("mySlides");
        var dots = document.getElementsByClassName("demo");
        var captionText = document.getElementById("caption");
        if (n > slides.length) {
            slideIndex = 1;
        }
        if (n < 1) {
            slideIndex = slides.length;
        }

        var isEmpty = true;

        for (i = 0; i < slides.length; i++) {
            slides[i].style.display = "none";
            isEmpty = false;
        }
        for (i = 0; i < dots.length; i++) {
            dots[i].className = dots[i].className.replace(" active", "");
            isEmpty = false;
        }

        if (isEmpty)
            return;

        slides[slideIndex - 1].style.display = "block";
        dots[slideIndex - 1].className += " active";
        captionText.innerHTML = dots[slideIndex - 1].alt;
    }
</script>


@Html.AntiForgeryToken()

<div class="panel-body">
    @Html.AjaxNote()
    @if ((Model.CanCreate && Model.DocumentId == 0) || (Model.CanEdit && Model.DocumentId > 0))
    {
        <fieldset>
            <legend>إدخال</legend>
            <div class="panel-body">
                @Html.SavedModel(Model)
                <div class="row">
                    <div class="col-lg-3 col-md-4 col-sm-6">
                        <div class="form-group">
                            @Html.Label("رقم الوثيقة")
                            @Html.TextBoxFor(model => model.Number, new { @class = "field_text form-control", disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.Number)
                        </div>
                    </div>
                    <div class="col-lg-3 col-md-4 col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.DocumentTypeId)
                            @Html.DropDownListFor(model => model.DocumentTypeId, new SelectList(Model.DocumentTypeList, nameof(DocumentTypeListItem.DocumentTypeId), nameof(DocumentTypeListItem.Name)), "--اختر--", new { @class = "field_menu form-control", onchange = "$(this.form).submit()" })
                            @Html.ValidationMessageFor(model => model.DecisionYear)
                        </div>
                    </div>
                    <div class="col-lg-3 col-md-4 col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.IssueDate)
                            @Html.DatePickerFor(model => model.IssueDate)
                            @Html.ValidationMessageFor(model => model.IssueDate)
                        </div>
                    </div>
                    <div class="col-lg-3 col-md-4 col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.IssuePlace)
                            @Html.TextBoxFor(model => model.IssuePlace, new { @class = "field_text form-control" })
                            @Html.ValidationMessageFor(model => model.IssuePlace)
                        </div>
                    </div>
                    @if (Model.HaveDecisionNumber)
                    {
                        <div class="col-lg-3 col-md-4 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.DecisionNumber)
                                @Html.TextBoxFor(model => model.DecisionNumber, new { @class = "field_text form-control" })
                                @Html.ValidationMessageFor(model => model.DecisionNumber)
                            </div>
                        </div>
                    }
                    @if (Model.HaveDecisionYear)
                    {
                        <div class="col-lg-3 col-md-4 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.DecisionYear)
                                @Html.TextBoxFor(model => model.DecisionYear, new { @class = "field_text form-control" })
                                @Html.ValidationMessageFor(model => model.DecisionYear)
                            </div>
                        </div>
                    }
                    @if (Model.HaveExpireDate)
                    {
                        <div class="col-lg-3 col-md-4 col-sm-6">
                            <div class="form-group">
                                @Html.LabelFor(model => model.ExpireDate)
                                @Html.DatePickerFor(model => model.ExpireDate)
                                @Html.ValidationMessageFor(model => model.ExpireDate)
                            </div>
                        </div>
                    }
                    <div class="col-lg-3 col-md-4 col-sm-6">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Note)
                            @Html.TextAreaFor(model => model.Note, new { @class = "field_area form-control" })
                            @Html.ValidationMessageFor(model => model.Note)
                        </div>
                    </div>
                    <div class="col-lg-3 col-md-4 col-sm-6">
                        <div class="form-group">
                            @Html.Label("تحميل صور")
                            <input name="uploadedImages" type="file" accept=".jpeg, .jpg, .png" multiple />
                            <input name="upload" type="hidden" id="upload" value="" />
                            <input type="submit" value="upload" onclick="UploadMultiple('upload', 'true');" class="file btn btn-primary btn-outline" />
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <div class="form-group" style="overflow-y: scroll; max-height: 200px">
                            @foreach (var imageId in Model.LoadedImages)
                            {
                                <div id="image-box-@imageId" class="side_by_side" style="font-size: 10px">
                                    <div id="printarea">
                                        <div id="container">
                                            <div class="image" id="image2">
                                                <a href="@Url.Action("GetImage", new {id = imageId})" style="width: 200px; height: 120px" data-lightbox="image-1" data-title="Emad">
                                                    <img height="100" src="@Url.Action("GetImage", new {id = imageId})" alt=""/>
                                                </a>
                                                <input type="hidden" id="deleteDocumentImageId" name="deleteDocumentImageId" value=""/>
                                            </div>
                                        </div>
                                    </div>
                                    <button type="button" onclick="DeleteImage(this, 'deleteDocumentImageId', '@imageId')" class="btn-link" style="text-decoration: none">حذف</button>
                                </div>
                            }
                            @for (var i = 0; i < Model.SavedImages.Count; i++)
                            {
                                var image = Model.SavedImages[i];
                                var base64 = Convert.ToBase64String(image);
                                var imgSrc = $"data:image/gif;base64,{base64}";
                                <div id="image-box2-@i" class="side_by_side" style="font-size: 10px">
                                    <div id="printarea">
                                        <div id="container">
                                            <div class="image" id="image2">
                                                <a href="@imgSrc" style="width: 200px; height: 120px" data-lightbox="image-1" data-title="Emad">
                                                    <img height="100" src="@imgSrc" alt="" />
                                                </a>
                                                <input type="hidden" id="deleteImageIndex" name="deleteImageIndex" value="" />
                                            </div>
                                        </div>
                                    </div>
                                    <button type="button" onclick="DeleteImage(this, 'deleteImageIndex', '@i')" class="btn-link" style="text-decoration: none">حذف</button>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        <div class="form-group">
                            <input name="save" type="hidden" id="save" value="" />
                            <button type="button" class="btn btn-warning" onclick="SendValueAjax(this, 'save', 'true')">حفظ</button>
                        </div>
                    </div>
                </div>
            </div>
        </fieldset>
    }
    <div class="row"><br /></div>
<div class="panel panel-default">
    <div class="panel-heading">@ViewBag.Title</div>
    <div class="panel-body">
        <div class="form-group">
            <div class="table-responsive">
                @{
                    var haveDecisionNumber = Model.DocumentGrid.Any(d => d.DecisionNumber != null);
                    var haveDecisionYear = Model.DocumentGrid.Any(d => d.DecisionYear != null);
                    var haveExpireDate = Model.DocumentGrid.Any(d => d.ExpireDate != null);
                }
                <table data-order='[]' class="table table-striped table-bordered table-hover" id="dataTables-example">
                    <thead>
                    <tr>
                        <th>رقم الوثيقة</th>
                        <th>نوع الوثيقة</th>
                        <th>تاريخ الإصدار</th>
                        <th>مكان الإصدار</th>
                        @if (haveDecisionNumber)
                        {
                            <th>رقم القرار</th>
                        }
                        @if (haveDecisionYear)
                        {
                            <th>سنة القرار</th>
                        }
                        @if (haveExpireDate)
                        {
                            <th>تاريخ الصلاحية</th>
                        }
                        <th>@Html.Show(Model.CanEdit)</th>
                        @if (Model.CanDelete)
                        {
                            <th>حذف</th>
                        }
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var item in Model.DocumentGrid)
                    {
                        <tr class="odd gradeX">
                            <td>@Html.DisplayFor(modelItem => item.Number)</td>
                            <td>@Html.DisplayFor(modelItem => item.DocumentType)</td>
                            <td>@Html.DisplayFor(modelItem => item.IssueDate)</td>
                            <td>@Html.DisplayFor(modelItem => item.IssuePlace)</td>
                            @if (haveDecisionNumber)
                            {
                                <td>@Html.DisplayFor(modelItem => item.DecisionNumber)</td>
                            }
                            @if (haveDecisionYear)
                            {
                                <td>@Html.DisplayFor(modelItem => item.DecisionYear)</td>
                            }
                            @if (haveExpireDate)
                            {
                                <td>@Html.DisplayFor(modelItem => item.ExpireDate)</td>
                            }
                            <td>
                                <input name="editDocumentId" type="hidden" id="editDocumentId" value=""/>
                                <button type="button" name="editDocumentId" onclick="SendValueAjax(this, 'editDocumentId', '@item.DocumentId');" class="btn btn-info">@Html.Show(Model.CanEdit)</button>
                            </td>
                            @if (Model.CanDelete)
                            {
                                <td>
                                    <input type="button" value="حذف" name="deleteDialog" class="btn btn-danger" data-toggle="modal" data-target="#deleteDocumentModal"/>
                                    <div id="deleteDocumentModal" class="modal fade" role="dialog">
                                        <div class="modal-dialog">

                                            <!-- Modal content-->
                                            <div class="modal-content">
                                                <div class="modal-header">
                                                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                                                    <h4 class="modal-title">حذف سجل</h4>
                                                </div>
                                                <div class="modal-body">
                                                    <p>هل أنت متأكد من أنك تريد حذف هذا السجل ؟</p>
                                                    <p style="color: crimson">لا يمكنك استعادة هذا السجل بعد الحذف</p>
                                                </div>
                                                <div class="modal-footer">
                                                    <button type="button" class="btn btn-default" data-dismiss="modal">إلغاء</button>
                                                    <input name="deleteDocumentId" type="hidden" id="deleteDocumentId" value=""/>
                                                    <button type="button" class="btn btn-danger" onclick="SendValueAjax(this, 'deleteDocumentId', '@item.DocumentId'); hideModal('deleteDocumentModal');">تأكيد الحذف</button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </td>
                            }
                        </tr>
                    }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
</div>
<!-- /.panel -->
<script type="text/javascript">
    function DeleteImage(element, id, value) {
        if (confirm("هل أنت متأكد من أنك تريد حذف هذه الصورة ؟")) {
            window.SendValueAjax(element, id, value);
        }
    }
</script>