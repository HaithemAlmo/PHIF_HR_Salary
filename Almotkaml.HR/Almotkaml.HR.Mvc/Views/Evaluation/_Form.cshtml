@model EvaluationModel
@{
    ViewBag.Title = "التقييم السنوي";
    Html.EnableClientValidation(false);
}

@Html.AntiForgeryToken()

<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">إدخال تقييم السنوي</div>
            <div class="panel-body">
                @Html.AjaxNote()
                @if ((Model.CanCreate && Model.EvaluationId == 0) || (Model.CanEdit && Model.EvaluationId > 0))
                {
                    <fieldset>
                        <legend>إدخال</legend>
                        @Html.HiddenFor(model => model.EvaluationId)
                        <div class="panel-body">
                            @Html.SavedModel(Model)
                            <div class="row">
                                <div class="col-lg-3 col-md-4 col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.EmployeeId)
                                        <button type="button" class="field_text form-control" style="text-align: right" data-toggle="modal" data-target="#myModal">@Model.EmployeeName</button>
                                        @Html.ValidationMessageFor(model => model.EmployeeId)
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-4 col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Year)
                                        @Html.TextBoxFor(model => model.Year, new { @class = "field_text form-control" })
                                        @Html.HiddenFor(model => model.EvaluationId)
                                        @Html.ValidationMessageFor(model => model.Year)


                                    </div>
                                </div>

                                <div class="col-lg-3 col-md-4 col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Date)
                                        @Html.DatePickerFor(model => model.Date, new {@class = "field_text form-control"})
                                        @Html.ValidationMessageFor(model => model.Date)
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-4 col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Grade, new { @class = "control-label" })
                                        @Html.EnumDropDownListFor(model => model.Grade, "--اختر--", new { @class = "field_menu form-control", onchange = "$(this.form).submit()" })
                                        @Html.ValidationMessageFor(model => model.Grade, null, new { @class = "has_error" })
                                    </div>
                                </div>

                                <div class="col-lg-3 col-md-4 col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Ratio)
                                        @Html.TextBoxFor(model => model.Ratio, new {@class = "field_text form-control"})
                                        @Html.ValidationMessageFor(model => model.Ratio)
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-4 col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DegreeNow)
                                        @Html.TextBoxFor(model => model.DegreeNow, new { @class = "field_text form-control",Readonly= "Readonly" })
                                        @Html.ValidationMessageFor(model => model.DegreeNow)
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-4 col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DateDegree)
                                        @Html.TextBoxFor(model => model.DateDegree, new { @class = "field_text form-control", Readonly = "Readonly" })
                                        @Html.ValidationMessageFor(model => model.DateDegree)
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-4 col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Note)
                                        @Html.TextAreaFor(model => model.Note, new { @class = "field_area form-control" })
                                        @Html.ValidationMessageFor(model => model.Note)
                                    </div>
                                </div>
                                </div>
                            <div class="row">
                                <div class="col-lg-12">
                                    <div class="form-group">
                                        <input name="save" type="submit" value="حفظ" class="btn btn-warning"/>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </fieldset>
                }
                <div class="row"><br/></div>
                <div class="panel panel-default">
                    <div class="panel-heading">@ViewBag.Title</div>
                    <div class="panel-body">
                        <div class="form-group">
                            <div class="table-responsive">
                                <table data-order='[]' class="table table-striped table-bordered table-hover" id="dataTables-example">
                                    <thead>
                                        <tr>
                                            <th>ر.ت</th>
                                            <th>الاسم</th>
                                            <th>السنة</th>
                                            <th>التاريخ</th>
                                            <th>الدرجة</th>
                                            <th>النسبة</th>
                                            <th>@Html.Show(Model.CanEdit)</th>
                                            @if (Model.CanDelete)
                                            {
                                                <th>حذف</th>
                                            }
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @{
                                            var count = 0;
                                        }
                                        @foreach (var item in Model.EvaluationGrird)
                                        {
                                            count++;
                                            <tr class="odd gradeX">
                                                <td>@count</td>
                                                <td>@Html.DisplayFor(modelItem => item.EmployeeName)</td>
                                                <td>@Html.DisplayFor(modelItem => item.Year)</td>
                                                <td>@Html.DisplayFor(modelItem => item.Date)</td>
                                                <td>@Html.DisplayFor(modelItem => item.Grade)</td>
                                                <td>@Html.DisplayFor(modelItem => item.Ratio)</td>

                                                <td>
                                                    @*@Html.ActionLink(Html.Show(Model.CanEdit), "Edit", new { id = item.EvaluationId }, new { @class = "btn btn-info" })*@
                                                    <button name="editEvaluationId" value="@item.EvaluationId" class="btn btn-info">@Html.Show(Model.CanEdit)</button>
                                                </td>
                                                @if (Model.CanDelete)
                                                {
                                                    @*<td class="center">@Html.ActionLink("حذف", "Delete", new { id = item.EvaluationId }, new { @class = "btn btn-danger" })</td>*@
                                                    <td>
                                                        @Html.Partial("_DeleteDialog", new DeleteDialog(nameof(item.EvaluationId), item.EvaluationId))
                                                    </td>
                                                }
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>

                        </div>
                    </div>
                </div>
                </div>
        </div>
    </div>
</div>
<!-- /.panel -->
   <!-- Region EmployeeGrid -->
<div class="modal fade" id="myModal" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">الموظفين</h4>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <div class="panel panel-default">
                        <div class="panel-body">
                            <div class="table-responsive">
                                <table style="overflow-x: hidden; max-height: 600px" data-order='[]' class="table table-striped table-bordered table-hover" id="dataTables-example2">
                                    <thead>
                                        <tr>
                                            <th width="20%"></th>
                                            <th width="20%">الرقم الوظيفي</th>
                                            <th width="20%">الاسم</th>
                                            <th width="20%">الإدارة</th>

                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model.EmployeeGrid)
                                        {
                                            <tr class="odd gradeX">
                                                <td>@Html.RadioButtonFor(model => model.EmployeeId, item.EmployeeId, new { onclick = "hideModal('myModal');$('.modal-backdrop').remove();$(this.form).submit();", data_dismiss = "modal" })</td>
                                                <td>@Html.DisplayFor(modelItem => item.JobNumber)</td>
                                                <td>@Html.DisplayFor(modelItem => item.ArabicFullName)</td>
                                                <td>@Html.DisplayFor(modelItem => item.DepartmentName)</td>

                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>                    <!-- /.panel-body -->
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">إغلاق</button>
            </div>
        </div>
    </div>
</div>
<!-- End Region EmployeeGrid -->
@Html.HiddenFor(model => model.EmployeeId)

