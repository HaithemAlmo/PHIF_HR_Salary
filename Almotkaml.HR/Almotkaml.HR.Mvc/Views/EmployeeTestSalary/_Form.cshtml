@model EmployeeTestSalaryModel
@{
    ViewBag.Title = "مرتبات موظفين التجربة ";
    Html.EnableClientValidation(false);
}

@Html.AntiForgeryToken()

<div class="row">
    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">احتساب مرتبات موظفين التجربة</div>
           
            <div class="panel-body">
               
                @Html.AjaxNote()
                @if ((Model.CanCreate && Model.EmployeeTestId  == 0) || (Model.CanEdit && Model.EmployeeTestId > 0))
                {
                    <fieldset>
                        <legend>إدخال</legend>
                        @Html.HiddenFor(model => model.EmployeeTestId)
                        <div class="panel-body">
                            @Html.SavedModel(Model)
                            <div class="row">
                                <div class="col-lg-3 col-md-3 col-sm-3">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.FirstName)
                                        @Html.TextBoxFor(model => model.FirstName, new { @class = "field_text form-control", disabled = "disabled" })
                                        @*@Html.ValidationMessageFor(model => model.FirstName)*@
                                    </div> 
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-3">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.FatherName)
                                        @Html.TextBoxFor(model => model.FatherName, new { @class = "field_text form-control", disabled = "disabled" })
                                        @*@Html.ValidationMessageFor(model => model.FatherName)*@
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-3">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.GrandfatherName)
                                        @Html.TextBoxFor(model => model.GrandfatherName, new { @class = "field_text form-control", disabled = "disabled" })
                                       @* @Html.ValidationMessageFor(model => model.GrandfatherName)*@
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-3">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.LastName)
                                        @Html.TextBoxFor(model => model.LastName, new { @class = "field_text form-control", disabled = "disabled" })
                                       @* @Html.ValidationMessageFor(model => model.LastName)*@
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.NationalNumber)
                                        @Html.TextBoxFor(model => model.NationalNumber, new { @class = "field_text form-control", disabled = "disabled" })
                                        @Html.ValidationMessageFor(model => model.NationalNumber)
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Gender, new { @class = "control-label" })
                                        @Html.EnumDropDownListFor(model => model.Gender, new { @class = "field_menu form-control", disabled = "disabled" })
                                        @Html.ValidationMessageFor(model => model.Gender, null, new { @class = "has_error" })
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Department)
                                        @Html.TextBoxFor(model => model.Department, new { @class = "field_text form-control", disabled = "disabled" })
                                       @* @Html.ValidationMessageFor(model => model.Department)*@
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Phone)
                                        @Html.TextBoxFor(model => model.Phone, new { @class = "field_text form-control", disabled = "disabled" } )
                                        @Html.ValidationMessageFor(model => model.Phone)
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Email)
                                        @Html.TextBoxFor(model => model.Email, new { @class = "field_text form-control", disabled = "disabled" })
                                        @Html.ValidationMessageFor(model => model.Email)
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Nationality)
                                        @Html.TextBoxFor(model => model.Nationality, new { @class = "field_text form-control", disabled = "disabled" } )
                                        @*@Html.ValidationMessageFor(model => model.Nationality)*@
                                    </div>
                                </div>
                                
                                <div class="col-lg-3 col-md-3 col-sm-3">
    <div class="form-group">
        @Html.LabelFor(model => model.Address)
        @Html.TextBoxFor(model => model.Address, new { @class = "field_text form-control", disabled = "disabled" })
        @Html.ValidationMessageFor(model => model.Address)
    </div>
</div>

                                <div class="col-lg-3 col-md-3 col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DateStartJob)
                                        @Html.TextBoxFor(model => model.DateStartJob, new { @class = "field_text form-control", disabled = "disabled" })
                                        @Html.ValidationMessageFor(model => model.DateStartJob)
                                    </div>
                                </div>
                                <div class="col-lg-3 col-md-3 col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DateEndJob)
                                        @Html.TextBoxFor(model => model.DateEndJob, new { @class = "field_text form-control", disabled = "disabled" })
                                        @Html.ValidationMessageFor(model => model.DateEndJob)
                                    </div>
                                </div>
                               
                                <div class="col-lg-3 col-md-3 col-sm-6">
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.TotalSalary)
                                        @Html.TextBoxFor(model => model.TotalSalary, new { @class = "field_text form-control", disabled = "disabled" })
                                        @Html.ValidationMessageFor(model => model.TotalSalary)
                                    </div>
                                </div>
                               
                            </div>
                            @*<div class="row">
                                <div class="col-lg-12">
                                    <div class="form-group">
                                        <input name="save" type="submit" value="حفظ" class="btn btn-warning"/>
                                    </div>
                                </div>
                            </div>*@
                        </div>
                    </fieldset>
                }
                <div class="row"><br/></div>
                <div class="panel panel-default">
                    <div class="panel-heading">@ViewBag.Title</div>
                    <div class="panel-body">
                        <div class="form-group">
                            <div class="table-responsive">
                                <table data-order='[]' class="table table-striped table-bordered table-hover" id="dataTables-example">
                                    <thead>
                                        <tr>
                                            <th>ر.ت</th>
                                           
                                            <th>إسم الموظف</th>
                                            <th>عدد أيام التجربة</th>
                                            <th>اجمالي المرتب</th>
                                            <th>@Html.Show(Model.CanEdit)</th>
                                           
                                            @if (Model.CanDelete)
                                            {
                                                <th>حذف</th>
                                            }

                                        </tr>
                                    </thead>
                                    <tbody>
                                        @{
                                            var count = 0;
                                        }
                                        @foreach (var item in Model.EmployeeTestSalayGridRow)
                                        {
                                            count++;
                                            <tr class="odd gradeX">
                                                <td>@count</td>
                                                <td>@Html.DisplayFor(modelItem => item.EmployeeTestName)</td>
                                                <td>@Html.DisplayFor(modelItem => item.DayCount)</td>
                                                <td>@Html.DisplayFor(modelItem => item.TotalSalary)</td>
                                                <td>
                                                    <button name="editEmployeeTestSalaryId" value="@item.EmployeeTestSalaryId" class="btn btn-info">@Html.Show(Model.CanEdit)</button>
                                                </td>
                                                @if (Model.CanDelete)
                                                {
                                                    <td>
                                                        @Html.Partial("_DeleteDialog", new DeleteDialog(nameof(item.EmployeeTestSalaryId), item.EmployeeTestSalaryId))
                                                    </td>
                                                }
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
                </div>
        </div>
    </div>
</div>
<!-- /.panel -->
