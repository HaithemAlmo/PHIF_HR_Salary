@using Almotkaml.HR
@using Almotkaml.HR.Domain
@model SalaryUnitModel
@{
    ViewBag.Title = "جدول المرتبات";
    Html.EnableClientValidation(false);
    var dic = new Dictionary<int, string>
    {
        {1, "الدرجة الاولى"},
        {2, "الدرجة الثانية"},
        {3, "الدرجة الثالثة"},
        {4, "الدرجة الرابعة"},
        {5, "الدرجة الخامسة"},
        {6, "الدرجة السادسة"},
        {7, "الدرجة السابعة"},
        {8, "الدرجة الثامنة"},
        {9, "الدرجة التاسعة"},
        {10, "الدرجة العاشرة"},
        {11, "الدرجة الحادية عشر"},
        {12, "الدرجة الثانية عشر"},
        {13, "الدرجة الثالثة عشر"},
        {14, "الدرجة الرابعة عشر"},
    };
    var dicTwo = new Dictionary<int,string>
    {
        {7, "السابعة"},
        {9, "التاسعة"},
        {101, "العاشرة (أ) "},
        {102, "العاشرة (ب)"},
        {11, "الحادية عشر"},
        {12, "الثانية عشر"},
        {131, "الثالثة عشر (أ)"},
        {132, "الثالثة عشر (ب)"},
        {141, "الرابعة عشر (أ)"},
        {142, "الرابعة عشر (ب)"},
    };
}

@Html.AntiForgeryToken()

<div class="row">
    <div class="col-lg-12">
@Html.AjaxNote()
@Html.SavedModel(Model)
<div class="row"><br/>
</div>
<div class="panel panel-default">
<div class="panel-heading">@ViewBag.Title</div>
<div class="panel-body">
<div class="row">
<div class="col-lg-12">
    <div class="form-group">
        @Html.LabelFor(model => model.SalayClassification, new { @class = "control-label" })
        @Html.EnumDropDownListFor(model => model.SalayClassification, new { @class = "field_menu form-control", onchange = "$(this.form).submit()" })
        @Html.ValidationMessageFor(model => model.SalayClassification, null, new { @class = "has_error" })

    </div>
</div>
</div>
<div class="form-group">
@if (Model.SalayClassification == SalayClassification.Default)
{
<div class="table-responsive">
    <table data-order='[]' class="table table-striped table-bordered table-hover" id="">
        <thead>
            <tr>
                <th>الدرجة</th>
                <th>بداية مربوط الدرجة</th>
                <th>نهاية مربوط الدرجة</th>
                <th>قيمة العلاوة السنوية</th>
                <th>الاولى</th>
                <th>الثانية</th>
                <th>الثالثة</th>
                <th>الرابعة</th>
                <th>الخامسة</th>
                <th>السادسة</th>
                <th>السابعة</th>
                <th>الثامنة</th>
                <th>التاسعة</th>
                <th>العاشرة</th>
                <th>الزيادة العامة</th>
                <th>الزيادة</th>
            </tr>
        </thead>
        <tbody>
            @for (var i = Model.SalaryUnitGrid.Count - 1; i >= 0; i--)
            {
                <tr class="odd gradeX">
                    <td>
                        @Html.Label(dic[Model.SalaryUnitGrid[i].Degree])
                        @Html.HiddenFor(model => Model.SalaryUnitGrid[i].Degree)
                    </td>
                    <td>@Html.TextBoxFor(model => Model.SalaryUnitGrid[i].BeginningValue, new {@class = "field_number form-control"})</td>
                    <td>@Model.GetPremium(10, Model.SalaryUnitGrid[i].Degree)</td>
                    <td>@Html.TextBoxFor(model => Model.SalaryUnitGrid[i].PremiumValue, new {@class = "field_number form-control"})</td>
                    <td>@Model.GetPremium(1, Model.SalaryUnitGrid[i].Degree)</td>
                    <td>@Model.GetPremium(2, Model.SalaryUnitGrid[i].Degree)</td>
                    <td>@Model.GetPremium(3, Model.SalaryUnitGrid[i].Degree)</td>
                    <td>@Model.GetPremium(4, Model.SalaryUnitGrid[i].Degree)</td>
                    <td>@Model.GetPremium(5, Model.SalaryUnitGrid[i].Degree)</td>
                    <td>@Model.GetPremium(6, Model.SalaryUnitGrid[i].Degree)</td>
                    <td>@Model.GetPremium(7, Model.SalaryUnitGrid[i].Degree)</td>
                    <td>@Model.GetPremium(8, Model.SalaryUnitGrid[i].Degree)</td>
                    <td>@Model.GetPremium(9, Model.SalaryUnitGrid[i].Degree)</td>
                    <td>@Model.GetPremium(10, Model.SalaryUnitGrid[i].Degree)</td>
                    <td>@Html.TextBoxFor(model => Model.SalaryUnitGrid[i].ExtraGeneralValue, new {@class = "field_number form-control"})</td>
                    <td>@Html.TextBoxFor(model => Model.SalaryUnitGrid[i].ExtraValue, new {@class = "field_number form-control"})</td>
                </tr>
            }
        </tbody>
    </table>
</div>
}
else if (Model.SalayClassification == SalayClassification.Clamp)
{
    <div class="table-responsive">
        <table data-order='[]' class="table table-striped table-bordered table-hover" id="">
            <thead>
            <tr>
                <th>الدرجة</th>
                <th>بداية مربوط الدرجة</th>
                <th>نهاية مربوط الدرجة</th>
                <th>قيمة العلاوة السنوية</th>
                <th>الاولى</th>
                <th>الثانية</th>
                <th>الثالثة</th>
                <th>الرابعة</th>
                <th>الخامسة</th>
                <th>السادسة</th>
                <th>السابعة</th>
                <th>الثامنة</th>
                <th>التاسعة</th>
                <th>العاشرة</th>
            </tr>
            </thead>
            <tbody>
            @for (var i = Model.SalaryUnitGrid.Count - 1; i >= 0; i--)
            {
                <tr class="odd gradeX">
                   <td>
                        @Html.Label(dicTwo[Model.SalaryUnitGrid[i].Degree])
                        @Html.HiddenFor(model => Model.SalaryUnitGrid[i].Degree)
                    </td>
                        <td>@Html.TextBoxFor(model => Model.SalaryUnitGrid[i].BeginningValue, new {@class = "field_number form-control"})</td>
                        <td>@Model.GetPremium(10, Model.SalaryUnitGrid[i].Degree)</td>
                        <td>@Html.TextBoxFor(model => Model.SalaryUnitGrid[i].PremiumValue, new {@class = "field_number form-control"})</td>
                        <td>@Model.GetPremium(1, Model.SalaryUnitGrid[i].Degree)</td>
                        <td>@Model.GetPremium(2, Model.SalaryUnitGrid[i].Degree)</td>
                        <td>@Model.GetPremium(3, Model.SalaryUnitGrid[i].Degree)</td>
                        <td>@Model.GetPremium(4, Model.SalaryUnitGrid[i].Degree)</td>
                        <td>@Model.GetPremium(5, Model.SalaryUnitGrid[i].Degree)</td>
                        <td>@Model.GetPremium(6, Model.SalaryUnitGrid[i].Degree)</td>
                        <td>@Model.GetPremium(7, Model.SalaryUnitGrid[i].Degree)</td>
                        <td>@Model.GetPremium(8, Model.SalaryUnitGrid[i].Degree)</td>
                        <td>@Model.GetPremium(9, Model.SalaryUnitGrid[i].Degree)</td>
                        <td>@Model.GetPremium(10, Model.SalaryUnitGrid[i].Degree)</td>
                </tr>
            }
            </tbody>
        </table>
    </div>
}
                <div class="row">
                    <div class="col-lg-12">
                        <div class="form-group">
                            <input name="save" type="submit" value="حفظ" class="btn btn-warning"/>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    </div>
</div>
<!-- /.panel -->
